# 游늸 ai/openai_advisor.py
import streamlit as st
from openai import OpenAI

if "OPENAI_API_KEY" not in st.secrets:
    raise ValueError("OPENAI_API_KEY is missing from secrets.")

client = OpenAI(api_key=st.secrets["OPENAI_API_KEY"])

def ask_openai(data: dict, industry: str = "") -> str:
    try:
        prompt = f"""
Du 칛r en f칬rs칛kringsspecialist som analyserar dokument baserat p친 f칬ljande uppgifter:

- Bransch: {industry}
- Premie: {data.get('premie', 'ok칛nd')} kr
- Sj칛lvrisk: {data.get('sj칛lvrisk', 'ok칛nd')}
- Omfattning: {data.get('omfattning', 'Ingen data')}
- Karens: {data.get('karens', 'ok칛nd')}
- Ansvarstid: {data.get('ansvarstid', 'ok칛nd')}

Baserat p친 ovan:
1. Kommentera kort f칬r- och nackdelar.
2. Ge konkreta f칬rb칛ttringsf칬rslag f칬r detta f칬retag inom sin bransch.
3. Skriv max 3 korta punkter i klartext p친 svenska.
"""
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "Du 칛r en f칬rs칛kringsexpert."},
                {"role": "user", "content": prompt}
            ]
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        return f"[AI-fel] {str(e)}"

def ask_openai_with_fulltext(text: str, industry: str = "") -> str:
    try:
        prompt = f"""
Du 칛r en f칬rs칛kringsspecialist som analyserar ett f칬rs칛kringsdokument.

Bransch: {industry}

Nedan f칬ljer inneh친llet i dokumentet:
--- START DOKUMENT ---
{text[:7000]}
--- SLUT DOKUMENT ---

1. Summera dokumentets f칬rs칛kringsinneh친ll.
2. Kommentera kort f칬r- och nackdelar.
3. Ge konkreta f칬rb칛ttringsf칬rslag inom f칬rs칛kringsskydd.
4. Max 3 punkter, skriv p친 enkel svenska.
"""
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "Du 칛r en f칬rs칛kringsexpert."},
                {"role": "user", "content": prompt}
            ]
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        return f"[AI-fel] {str(e)}"
