# üìç ai/openai_advisor.py
import streamlit as st
from openai import OpenAI

if "OPENAI_API_KEY" not in st.secrets:
    raise ValueError("OPENAI_API_KEY is missing from secrets.")

client = OpenAI(api_key=st.secrets["OPENAI_API_KEY"])

def ask_openai(data: dict, industry: str = "") -> str:
    try:
        prompt = f"""
Du √§r en avancerad AI-f√∂rs√§kringsr√•dgivare med djup branschkunskap. Din uppgift √§r att:

Analysera ett PDF-dokument som inneh√•ller f√∂retagets f√∂rs√§kringspolicy, avtal och √∂vriga relevanta dokument.

Fokusera p√• att ge konkreta och praktiska r√•d kring f√∂rs√§kringsskyddets omfattning, samt identifiera centrala riskfaktorer anpassade efter f√∂retagets specifika bransch.

Utesluta analyser av dokumentets struktur eller formella uppbyggnad ‚Äì din bed√∂mning ska enbart grunda sig p√• inneh√•llet och dess praktiska konsekvenser.

Svara med h√∂gst 5 korta och tydliga punkter.

Om viktig information saknas, st√§ll f√∂ljdfr√•gor f√∂r att klarg√∂ra n√∂dv√§ndig kontext.
"""
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "Du √§r en f√∂rs√§kringsexpert."},
                {"role": "user", "content": prompt}
            ]
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        return f"[AI-fel] {str(e)}"

def ask_openai_with_fulltext(text: str, industry: str = "") -> str:
    try:
        prompt = f"""
Du √§r en f√∂rs√§kringsspecialist som analyserar ett f√∂rs√§kringsdokument.

Bransch: {industry}

Nedan f√∂ljer inneh√•llet i dokumentet:
--- START DOKUMENT ---
{text[:7000]}
--- SLUT DOKUMENT ---

1. Summera dokumentets f√∂rs√§kringsinneh√•ll.
2. Kommentera kort f√∂r- och nackdelar.
3. Ge konkreta f√∂rb√§ttringsf√∂rslag inom f√∂rs√§kringsskydd.
4. Max 3 punkter, skriv p√• enkel svenska.
"""
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "Du √§r en f√∂rs√§kringsexpert."},
                {"role": "user", "content": prompt}
            ]
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        return f"[AI-fel] {str(e)}"
